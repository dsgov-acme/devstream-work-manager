apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: work-manager-postgres
  namespace: {{ .Values.namespace | default "devstream" }}
  labels:
    {{- include "postgres.labels" . | nindent 4 }}
spec:
  serviceName: work-manager-postgres
  replicas: 1
  selector:
    matchLabels:
      {{- include "postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "postgres.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: work-manager-postgres
          image: postgres:14-alpine
          imagePullPolicy: IfNotPresent
          env:
            {{- include "env.tpl" .Values.env | indent 12 }}
          ports:
            - name: pg
              containerPort: 5432
              protocol: TCP
          readinessProbe:
            exec:
              command: ["/bin/sh", "-c", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-14-work-manager-data
  volumeClaimTemplates:
    - metadata:
        name: postgres-14-work-manager-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
