plugins {
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
	id 'com.google.cloud.tools.jib'
	id 'checkstyle'
	id 'jacoco'
	id 'com.diffplug.spotless'
	id 'com.github.spotbugs'
	id 'pmd'
	id 'org.sonarqube'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

apply from: "${rootDir}/gradle/openapi-tools/server.gradle"
apply from: "${rootDir}/gradle/code-quality.gradle"

def mapstructVersion = '1.5.2.Final'

configurations {
	compileOnly.extendsFrom annotationProcessor

}

dependencies {
	implementation project(':audit-service-client')
	implementation project(path: ':notification-service-client')
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	compileOnly 'com.google.code.findbugs:annotations:3.0.1'
	compileOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'

	implementation platform('org.camunda.bpm:camunda-bom:7.20.0')

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-secretmanager:4.7.2'

	implementation('org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-rest:7.20.0') {
		exclude group: 'com.sun.xml.bind', module: 'jaxb-core'
	}

	// This currently triggers a security vulnerability CVE-2022-31129 with the embedded web applications
	// bundled version of moment.js. Leaving the web app starter out for now, we can revisit this situation if
	// we choose to pursue this functionality.
	//
	// implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter-webapp'
	implementation 'org.camunda.bpm:camunda-bpm-junit5:7.20.0'
	implementation 'commons-beanutils:commons-beanutils:1.9.4'
	implementation 'commons-validator:commons-validator:1.7'
	implementation 'org.liquibase:liquibase-core'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

	implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.6.0'

	implementation 'io.nuvalence.dsgov:dsgov-auth:1.0.0'

	implementation 'io.nuvalence.dsgov:dsgov-logging:1.0.0'

	implementation 'com.github.jknack:handlebars:4.2.1'

	// version bump to address known CVEs
	implementation 'org.yaml:snakeyaml:1.33'

	runtimeOnly 'org.postgresql:postgresql:42.6.0'
	runtimeOnly 'com.google.cloud.sql:postgres-socket-factory:1.5.0'
	runtimeOnly 'com.h2database:h2:2.1.214'

	// testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.10'
	testImplementation 'org.avaje.composite:junit:5.1'
	testImplementation 'org.mockito:junit-jupiter:2.20.0'
	testImplementation 'org.mockito:mockito-core:4.4.0'
	testImplementation 'org.springframework.security:spring-security-test:6.2.0'
	testImplementation 'org.mockito:mockito-inline:3.11.2'
	testImplementation 'org.camunda.community.mockito:camunda-platform-7-mockito:7.20.0'

	//cloud trace
	implementation 'com.google.cloud:spring-cloud-gcp-starter-trace:4.7.2'

	implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.10"
}

test {
	useJUnitPlatform()
	jacoco {
		excludes += '**/generated/**'
		excludes += '**/RFC3339DateFormat*'
		excludes += '**/OpenAPI2SpringBoot*'
		excludes += '**/mapper/*Impl*'
	}
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

sonarqube {
	properties {
		property 'sonar.dependencyCheck.htmlReportPath', 'build/reports/dependency-check-report.html'
		property 'sonar.dependencyCheck.jsonReportPath', 'build/reports/dependency-check-report.json'
		property 'sonar.dependencyCheck.summarize', true
	}
}

test.finalizedBy jacocoTestReport
tasks.named('sonarqube').configure {
	dependsOn test
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true', '-parameters'
	]
}

bootRun {
	systemProperty 'spring.profiles.active', findProperty('profile') ?: 'local'
}
